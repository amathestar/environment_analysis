summarise(Average_temperature = mean(Temperature))
View(avg_temp_per_city)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
group_by(City, YearMonth)  %>%
View(var)
mean(var$Temperature, na.rm = TRUE)  # Replace column_name with your actual column
avg_temp_per_city<- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
group_by(City, YearMonth)  %>%
summarise(Average_temperature = mean(Temperature))
View(avg_temp_per_city)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
group_by(City, YearMonth)  %>%
View(var)
mean(var$Temperature, na.rm = TRUE)  # Replace column_name with your actual column
View(var)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
group_by(City)  %>%
View(var)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
group_by(City)  %>%
View(var)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
group_by(City)  %>%
View(var)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
group_by(City)  %>%
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
avg_temp_per_city<- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
group_by(City, YearMonth)  %>%
summarise(Average_temperature = mean(Temperature))
View(avg_temp_per_city)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01")) %>%
group_by(City)  %>%
View(var)
mean(var$Temperature, na.rm = TRUE)  # Replace column_name with your actual column
View(var)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01"))
View(var)
var <- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
filter(YearMonth >= as.Date("2022-01-01") & YearMonth < as.Date("2022-02-01")) %>%
group_by(City)  %>%
avg_temp_per_city<- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
group_by(City, YearMonth)  %>%
summarise(Average_temperature = mean(Temperature))
avg_temp_per_city<- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
group_by(City, YearMonth)  %>%
summarise(Average_temperature = mean(Temperature))
View(avg_temp_per_city)
```{r}
avg_temp_per_city<- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
group_by(City, YearMonth)  %>%
summarise(Average_temperature = mean(Temperature))
View(avg_temp_per_city)
avg_temp_per_city<- envdata %>%
mutate(YearMonth = floor_date(Date, "month")) %>%
group_by(City, YearMonth)  %>%
summarise(Average_temperature = mean(Temperature))
View(avg_temp_per_city)
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = City, y = Average_temperature)) +
geom_line(stat = "identity",color = "#00abff", size = 1) +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = City, y = YearMonth, fill = Average_temperature)) +
geom_line(stat = "identity",color = "#00abff", size = 1) +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = YearMonth, y = Average_temperature, fill = City)) +
geom_line(stat = "identity",color = "#00abff", size = 1) +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = YearMonth, y = Average_temperature, fill = City)) +
geom_line(stat = "identity",color = City, size = 1) +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = YearMonth, y = Average_temperature, fill = City, color=City)) +
geom_line(stat = "identity",color = "#00abff", size = 1) +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = YearMonth, y = Average_temperature, fill = City, color=City)) +
geom_line(stat = "identity",color = "City", size = 1) +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = YearMonth, y = Average_temperature, colour=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Value") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = City, y = Average_temperature, colour=YearMonth)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 2) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = City, y = Average_temperature, colour=YearMonth)) +
geom_line()
labs(title = "Line Plot Example",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = Average_temperature, y=YearMonth)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = Average_temperature, y=YearMonth, fill=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot Example",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x = City, y=YearMonth, fill=Average_temperature)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x=YearMonth,y = Average_temperature)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x=YearMonth,y = Average_temperature, fill=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x=YearMonth,y = Average_temperature, fill=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x=YearMonth,y = Average_temperature, Colour=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x=YearMonth,y = Average_temperature, Colour=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(avg_temp_per_city, aes(x=YearMonth,y = Average_temperature, fill=City, Colour=City)) +
geom_line() +  # Line color & thickness
geom_point(color = "red", size = 1) +  # Add points for visibility
labs(title = "Line Plot ",
x = "Date",
y = "Temperature") +
theme_minimal()  # Clean theme
library(ggplot2)
ggplot(data=gapminder, aes(x=YearMonth, y=Average_temperature), colour=City)+
geom_line(stat="identity")
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), colour=City)+
geom_line(stat="identity")
geom_point()+
labs(title="Temperature trends across cities")
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), colour=City)+
geom_line(stat="identity")+
geom_point()+
labs(title="Temperature trends across cities")
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), colour=City)+
geom_line(stat="identity")+
geom_point(color="Red")+
labs(title="Temperature trends across cities")
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill=city, colour=City)+
geom_line(stat="identity")+
geom_point(color="Red")+
labs(title="Temperature trends across cities")
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill=City, colour=City)+
geom_line(stat="identity")+
geom_point(color="Red")+
labs(title="Temperature trends across cities")
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill=City, colour=City)+
geom_line()+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill=City)+
geom_line(colour=City)+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill=City)+
geom_line(colour= City)+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill=City)+
geom_line()+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), colour= City)+
geom_line()+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill= City)+
geom_line()+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill= City)+
geom_line()+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
avg_temp_per_city %>%
ggplot(aes(x=Amanda, y=Ashley, label=year)) +
geom_point() +
geom_segment(aes(xend=c(tail(Amanda, n=-1), NA),
yend=c(tail(Ashley, n=-1), NA)
))
library(ggplot2)
ggplot(data=avg_temp_per_city, aes(x=YearMonth, y=Average_temperature), fill= City)+
geom_line()+
geom_point(color="Red")+
labs(title="Temperature trends across cities",
x ="Date",
y ="Value") +
theme_minimal()
avg_temp_per_city %>%
ggplot(aes(x=YearMonth, y=Average_temperature, label=City)) +
geom_point())
avg_temp_per_city %>%
ggplot(aes(x=YearMonth, y=Average_temperature, label=City)) +
geom_point()
avg_temp_per_city %>%
ggplot(aes(x=YearMonth, y=Average_temperature, fill=City)) +
geom_point()
avg_temp_per_city %>%
ggplot(aes(x=YearMonth, y=Average_temperature, colour=City)) +
geom_point()
avg_temp_per_city %>%
ggplot(aes(x=YearMonth, y=Average_temperature, colour=City)) +
geom_point()
labs(title="Temperature trends across cities",
x ="Date (Year-Months)",
y ="Average Temperature") +
theme_minimal()
avg_temp_per_city %>%
ggplot(aes(x=YearMonth, y=Average_temperature, colour=City)) +
geom_point()+
geom_line()+
labs(title="Temperature trends across cities",
x ="Date (Year-Months)",
y ="Average Temperature") +
theme_minimal()
envdata %>%
ggplot(aes(x = Rainfall, fill = City)) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7, position = "dodge") +
labs(title = "Histogram showing Distribution of daily rainfall across all cities",
x = "Cities",
y = "Rainfall") +
theme_minimal()
envdata %>%
group_by(City) %>%
ggplot(aes(x = Rainfall, fill = City)) +
geom_histogram(binwidth = 5, color = "black", alpha = 0.7, position = "dodge") +
labs(title = "Histogram showing Distribution of daily rainfall across all cities",
x = "Cities",
y = "Rainfall") +
theme_minimal()
envdata %>%
ggplot( aes(x=Rainfall, fill=City)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
theme_ipsum() +
labs(fill="")
envdata %>%
ggplot( aes(x=Rainfall, fill=City)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
scale_fill_manual(values=c("#69b3a2", "#404080")) +
labs(fill="")
envdata %>%
ggplot( aes(x=Rainfall, fill=City)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
labs(fill="")
envdata %>%
ggplot( aes(x=Rainfall, fill=City)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
labs(fill="")
envdata %>%
ggplot(aes(x = Rainfall, fill = City)) +
geom_histogram(binwidth = 5, color = "blue", alpha = 0.7, position = "dodge") +
labs(title = "Histogram showing Distribution of daily rainfall across all cities",
x = "Cities",
y = "Rainfall") +
theme_minimal()
envdata %>%
ggplot( aes(x=Rainfall, fill=City)) +
geom_histogram( color="#e9ecef", alpha=0.6, position = 'identity') +
labs(fill="")
envdata %>%
ggplot(aes(x = Rainfall, fill = City)) +
geom_histogram(binwidth = 5, alpha = 0.7, position = "identity") +
labs(title = "Histogram showing Distribution of daily rainfall across all cities",
x = "Cities",
y = "Rainfall") +
theme_minimal()
envdata %>%
ggplot(aes(x = Rainfall, fill = City)) +
geom_histogram(binwidth = 5, alpha = 0.7, position = "identity") +
labs(title = "Histogram showing Distribution of daily rainfall across all cities",
x = "Cities",
y = "Rainfall") +
theme_minimal()
envdata %>%
ggplot(aes(x = Rainfall, fill = City)) +
geom_histogram(binwidth = 5, alpha = 0.7, position = "identity") +
labs(title = "Histogram showing Distribution of daily rainfall across all cities",
x = "Cities",
y = "Rainfall") +
theme_minimal()
library{readr}
library{readr}
library(readr)
stones_data <- read_csv("data/rolling_stones.csv")
View(stones_data)
stones_data %>%
group_by(album_name) %>%
summarise(number_of_songs = n(song_name) ,
avg_popularity= mean(song_popularity))
stones_data %>%
group_by(album_name) %>%
summarise(number_of_songs = n() ,
avg_popularity= mean(song_popularity))
View(stones_data)
stones_data_2 <-  stones_data %>%
group_by(album_name) %>%
summarise(number_of_songs = n() ,
avg_popularity= mean(song_popularity))
View(stones_data_2)
stones_data_2 <-  stones_data %>%
group_by(album_name) %>%
summarise(number_of_songs = n() ,
avg_popularity= mean(song_popularity))
View(stones_data_2)
# Reshape data
df_long <- stones_data_2 %>%
pivot_longer(cols = c(number_of_songs,avg_popularity), # Select columns to pivot
names_to = "metrics",          # New column for column names
values_to = "values")        # New column for values
library(readr)
library(tidyr)
library(dplyr)
stones_data <- read_csv("data/rolling_stones.csv")
View(stones_data)
# Reshape data
df_long <- stones_data_2 %>%
pivot_longer(cols = c(number_of_songs,avg_popularity), # Select columns to pivot
names_to = "metrics",          # New column for column names
values_to = "values")        # New column for values
head(df_long,5)
# Reshape data
df_long <- stones_data_2 %>%
pivot_longer(cols = c(number_of_songs,avg_popularity), # Select columns to pivot
names_to = "metrics",          # New column for column names
values_to = "values")        # New column for values
head(df_long,8)
saless_data <- read_tsv("data/sales_data.tsv")
head(saless_data)
saless_data <- read_tsv("data/sales_data.tsv")
head(saless_data)
names(saless_data)
saless_data <- read_tsv("data/sales_data.tsv")
glimpse(saless_data)
names(saless_data)
saless_data <- read_tsv("data/sales_data.tsv")
str(saless_data)
names(saless_data)
saless_data <- read_tsv("data/sales_data.tsv")
str(saless_data)
spec(saless_data)
names(sales_data)
sales_data <- read_tsv("data/sales_data.tsv")
str(sales_data)
names(sales_data)
sales_data <- read_tsv("data/sales_data.tsv")
str(sales_data)
names(sales_data)
View(sales_data)
sales_data <- read_tsv("data/sales_data.tsv", skip=2)
str(sales_data)
names(sales_data)
View(sales_data)
sales_data %>%
group_by(product_type) %>%
summarise(number_of_order = n(),
total_quantity = sum(quantity)) %>%
pivot_longer(cols=c(number_of_order,total_quantity),
names_to="metrics",
values_to = "value")
head(sales_report,10)
sales_report <-sales_data %>%
group_by(product_type) %>%
summarise(number_of_order = n(),
total_quantity = sum(quantity)) %>%
pivot_longer(cols=c(number_of_order,total_quantity),
names_to="metrics",
values_to = "value")
head(sales_report,10)
sales_report <-sales_data %>%
group_by(product_type) %>%
summarise(number_of_order = n(),
total_quantity = sum(quantity)) %>%
pivot_longer(cols=c(number_of_order,total_quantity),
names_to="metrics",
values_to = "value")
View(sales_report)
